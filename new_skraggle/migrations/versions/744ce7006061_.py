"""empty message

Revision ID: 744ce7006061
Revises: 
Create Date: 2023-01-02 22:05:41.842524

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '744ce7006061'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AccessTokenBlocklist',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_AccessTokenBlocklist_sn'), 'AccessTokenBlocklist', ['sn'], unique=False)
    op.create_table('Admin',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=500), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_generated_token', sa.String(length=255), nullable=True),
    sa.Column('token_generated_at', sa.DateTime(), nullable=True),
    sa.Column('donor_kpis', sa.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('fundraising_kpis', sa.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('email_marketing_kpis', sa.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('monthly_donation_goal', sa.Float(), nullable=True),
    sa.Column('quarterly_donation_goal', sa.Float(), nullable=True),
    sa.Column('yearly_donation_goal', sa.Float(), nullable=True),
    sa.Column('monthly_revenue_goal', sa.Float(), nullable=True),
    sa.Column('quarterly_revenue_goal', sa.Float(), nullable=True),
    sa.Column('yearly_revenue_goal', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_Admin_organization_id'), 'Admin', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Admin_sn'), 'Admin', ['sn'], unique=False)
    op.create_table('Campaign',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('fundraising_goal', sa.Integer(), nullable=True),
    sa.Column('followers', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Campaign_organization_id'), 'Campaign', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Campaign_sn'), 'Campaign', ['sn'], unique=False)
    op.create_table('ContactCompanies',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('assignee', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('established_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('tags', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('solicitation', sa.Boolean(), nullable=True),
    sa.Column('primary_contact', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_subscribed_to_mailblasts', sa.Boolean(), nullable=True),
    sa.Column('mailblasts_unsubscribe_feedback', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ContactCompanies_organization_id'), 'ContactCompanies', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ContactCompanies_sn'), 'ContactCompanies', ['sn'], unique=False)
    op.create_table('ContactTags',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ContactTags_organization_id'), 'ContactTags', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ContactTags_sn'), 'ContactTags', ['sn'], unique=False)
    op.create_table('ContactTodo',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('todo', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('due_at', sa.DateTime(), nullable=True),
    sa.Column('assignees', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('attachments', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ContactTodo_organization_id'), 'ContactTodo', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ContactTodo_sn'), 'ContactTodo', ['sn'], unique=False)
    op.create_table('ContactUsers',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('preferred_name', sa.String(length=255), nullable=True),
    sa.Column('primary_email', sa.String(length=255), nullable=False),
    sa.Column('primary_phone', sa.String(length=20), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('tags', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('home_email', sa.String(length=255), nullable=True),
    sa.Column('work_email', sa.String(length=255), nullable=True),
    sa.Column('other_emails', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('home_phone', sa.String(length=20), nullable=True),
    sa.Column('work_phone', sa.String(length=20), nullable=True),
    sa.Column('other_phones', postgresql.ARRAY(sa.String(length=20)), nullable=True),
    sa.Column('home_address', sa.String(length=255), nullable=True),
    sa.Column('work_address', sa.String(length=255), nullable=True),
    sa.Column('other_addresses', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('twitter', sa.String(length=255), nullable=True),
    sa.Column('facebook', sa.String(length=255), nullable=True),
    sa.Column('youtube', sa.String(length=255), nullable=True),
    sa.Column('linkedin', sa.String(length=255), nullable=True),
    sa.Column('instagram', sa.String(length=255), nullable=True),
    sa.Column('other_websites', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('households', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('unit', sa.String(length=255), nullable=True),
    sa.Column('postal_code', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('company', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('assignee', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_subscribed_to_mailblasts', sa.Boolean(), nullable=True),
    sa.Column('mailblasts_unsubscribe_feedback', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('t_shirt_size', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ContactUsers_organization_id'), 'ContactUsers', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ContactUsers_sn'), 'ContactUsers', ['sn'], unique=False)
    op.create_table('DonationSource',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_DonationSource_organization_id'), 'DonationSource', ['organization_id'], unique=False)
    op.create_index(op.f('ix_DonationSource_sn'), 'DonationSource', ['sn'], unique=False)
    op.create_table('Fields',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('field_label', sa.String(length=255), nullable=True),
    sa.Column('reporting_label', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('event_wide_field', sa.String(length=255), nullable=True),
    sa.Column('show_field_on_separate_line', sa.Boolean(), nullable=True),
    sa.Column('associated_packages', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Fields_organization_id'), 'Fields', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Fields_sn'), 'Fields', ['sn'], unique=False)
    op.create_table('Households',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Households_organization_id'), 'Households', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Households_sn'), 'Households', ['sn'], unique=False)
    op.create_table('ImpactArea',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ImpactArea_organization_id'), 'ImpactArea', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ImpactArea_sn'), 'ImpactArea', ['sn'], unique=False)
    op.create_table('Keyword',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Keyword_organization_id'), 'Keyword', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Keyword_sn'), 'Keyword', ['sn'], unique=False)
    op.create_table('Packages',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('private_package', sa.Boolean(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('direct_cost', sa.Integer(), nullable=False),
    sa.Column('number_of_packages_for_sale', sa.Integer(), nullable=False),
    sa.Column('qty_purchase_limit', sa.Integer(), nullable=False),
    sa.Column('early_bird_discount_enabled', sa.Boolean(), nullable=False),
    sa.Column('early_bird_discount_amount', sa.Integer(), nullable=True),
    sa.Column('early_bird_discount_cutoff_time', sa.DateTime(), nullable=True),
    sa.Column('early_bird_discount_type', sa.String(length=50), nullable=True),
    sa.Column('participants', sa.Integer(), nullable=True),
    sa.Column('pre_select_qty', sa.Integer(), nullable=True),
    sa.Column('custom_event_field', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Packages_organization_id'), 'Packages', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Packages_sn'), 'Packages', ['sn'], unique=False)
    op.create_table('PromoCode',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('discount', sa.Integer(), nullable=True),
    sa.Column('max_user', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PromoCode_organization_id'), 'PromoCode', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PromoCode_sn'), 'PromoCode', ['sn'], unique=False)
    op.create_table('AssociatedContact',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('position', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_AssociatedContact_organization_id'), 'AssociatedContact', ['organization_id'], unique=False)
    op.create_index(op.f('ix_AssociatedContact_sn'), 'AssociatedContact', ['sn'], unique=False)
    op.create_table('ContactInteraction',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_individual', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('interacted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attachments', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('todos', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ContactInteraction_organization_id'), 'ContactInteraction', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ContactInteraction_sn'), 'ContactInteraction', ['sn'], unique=False)
    op.create_table('Element',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Element_organization_id'), 'Element', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Element_sn'), 'Element', ['sn'], unique=False)
    op.create_table('EventBriteKey',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('admin_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.Column('oauth_token', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['Admin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_EventBriteKey_organization_id'), 'EventBriteKey', ['organization_id'], unique=False)
    op.create_index(op.f('ix_EventBriteKey_sn'), 'EventBriteKey', ['sn'], unique=False)
    op.create_table('EventbriteEvents',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('eventbrite_id', sa.String(length=50), nullable=False),
    sa.Column('event_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('time_zone', sa.Text(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('event_image', sa.String(length=255), nullable=False),
    sa.Column('event_sold_out_message', sa.String(length=255), nullable=False),
    sa.Column('venue', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('zip_country', sa.Integer(), nullable=False),
    sa.Column('enable_map', sa.Boolean(), nullable=False),
    sa.Column('display_option', sa.String(length=100), nullable=False),
    sa.Column('total_participant', sa.Integer(), nullable=False),
    sa.Column('enable_one_time_donation', sa.Boolean(), nullable=False),
    sa.Column('event_has_reg_cutoff_date', sa.Boolean(), nullable=False),
    sa.Column('admin_notification', sa.PickleType(), nullable=False),
    sa.Column('reciept_type', sa.String(length=255), nullable=False),
    sa.Column('reciept_title', sa.String(length=255), nullable=False),
    sa.Column('reciept_category', sa.String(length=255), nullable=False),
    sa.Column('reciept_description', sa.String(length=255), nullable=False),
    sa.Column('sender_name', sa.String(length=255), nullable=False),
    sa.Column('reply_email', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_EventbriteEvents_organization_id'), 'EventbriteEvents', ['organization_id'], unique=False)
    op.create_index(op.f('ix_EventbriteEvents_sn'), 'EventbriteEvents', ['sn'], unique=False)
    op.create_table('EventsInformation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('event_image', sa.String(length=255), nullable=False),
    sa.Column('event_sold_out_message', sa.String(length=255), nullable=False),
    sa.Column('venue', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('zip_country', sa.Integer(), nullable=False),
    sa.Column('enable_map', sa.Boolean(), nullable=False),
    sa.Column('display_option', sa.String(length=100), nullable=False),
    sa.Column('total_participant', sa.Integer(), nullable=False),
    sa.Column('enable_one_time_donation', sa.Boolean(), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('event_has_reg_cutoff_date', sa.Boolean(), nullable=False),
    sa.Column('admin_notification', sa.PickleType(), nullable=False),
    sa.Column('reciept_type', sa.String(length=255), nullable=False),
    sa.Column('reciept_title', sa.String(length=255), nullable=False),
    sa.Column('reciept_category', sa.String(length=255), nullable=False),
    sa.Column('reciept_description', sa.String(length=255), nullable=False),
    sa.Column('sender_name', sa.String(length=255), nullable=False),
    sa.Column('reply_email', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_EventsInformation_organization_id'), 'EventsInformation', ['organization_id'], unique=False)
    op.create_index(op.f('ix_EventsInformation_sn'), 'EventsInformation', ['sn'], unique=False)
    op.create_table('Form',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('amount_raised', sa.Integer(), nullable=True),
    sa.Column('donations_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=25), nullable=False),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('auto_tag', sa.Boolean(), nullable=True),
    sa.Column('form_flow', sa.Boolean(), nullable=True),
    sa.Column('request_personal_details_before_checkout', sa.Boolean(), nullable=False),
    sa.Column('use_donor_accounts', sa.Boolean(), nullable=False),
    sa.Column('use_offline_payment', sa.Boolean(), nullable=False),
    sa.Column('events_link_on_first_page', sa.Boolean(), nullable=False),
    sa.Column('default_currency', sa.String(length=20), nullable=True),
    sa.Column('currency_change_allowed', sa.Boolean(), nullable=False),
    sa.Column('change_currency_for', sa.String(length=70), nullable=True),
    sa.Column('recurring_giving', sa.String(length=70), nullable=True),
    sa.Column('recurring_gift_suggestion', sa.String(length=45), nullable=True),
    sa.Column('recurring_default', sa.String(length=40), nullable=True),
    sa.Column('donation_amount', sa.Integer(), nullable=True),
    sa.Column('amount_presets', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('designation_cause_from', sa.Boolean(), nullable=True),
    sa.Column('designation', sa.String(length=255), nullable=True),
    sa.Column('enable_comments', sa.Boolean(), nullable=True),
    sa.Column('enable_tribute', sa.Boolean(), nullable=True),
    sa.Column('transaction_cost', sa.String(length=120), nullable=True),
    sa.Column('ask_mailing_address', sa.Boolean(), nullable=True),
    sa.Column('ask_phone_number', sa.Boolean(), nullable=True),
    sa.Column('anonymous_donation_allowed', sa.Boolean(), nullable=True),
    sa.Column('company_donations_allowed', sa.Boolean(), nullable=True),
    sa.Column('thank_you_screen', sa.Boolean(), nullable=True),
    sa.Column('redirection', sa.String(length=15), nullable=True),
    sa.Column('checkout_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Form_organization_id'), 'Form', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Form_sn'), 'Form', ['sn'], unique=False)
    op.create_table('MailBlast',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('email_to', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('email_from', sa.String(length=255), nullable=True),
    sa.Column('email_subject', sa.String(length=255), nullable=True),
    sa.Column('email_sender_name', sa.String(length=255), nullable=True),
    sa.Column('email_body', sa.Text(), nullable=True),
    sa.Column('email_attachments', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('send_to_all_contacts', sa.Boolean(), nullable=False),
    sa.Column('send_at', sa.DateTime(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('unsubscribe_message', sa.Text(), nullable=True),
    sa.Column('allow_custom_feedback_on_unsubscribe', sa.Boolean(), nullable=False),
    sa.Column('worker_task_id', sa.String(length=255), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=False),
    sa.Column('tags', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('opened_by', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('recipients', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('reply_to', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_MailBlast_organization_id'), 'MailBlast', ['organization_id'], unique=False)
    op.create_index(op.f('ix_MailBlast_sn'), 'MailBlast', ['sn'], unique=False)
    op.create_table('P2P',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('designation', sa.String(length=255), nullable=True),
    sa.Column('fundraiser_display_name', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('goal', sa.Float(), nullable=True),
    sa.Column('goal_currency', sa.String(length=5), nullable=True),
    sa.Column('offline_amount', sa.Integer(), nullable=True),
    sa.Column('offline_donation', sa.Integer(), nullable=True),
    sa.Column('goal_date', sa.DateTime(), nullable=True),
    sa.Column('personal_message', sa.Text(), nullable=True),
    sa.Column('profile_photo', sa.String(length=255), nullable=True),
    sa.Column('display_photos', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('paused', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_P2P_organization_id'), 'P2P', ['organization_id'], unique=False)
    op.create_index(op.f('ix_P2P_sn'), 'P2P', ['sn'], unique=False)
    op.create_table('PayPalSettings',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('admin_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('client_id_secret_key', sa.LargeBinary(), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.Column('client_secret_sec_key', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['Admin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PayPalSettings_organization_id'), 'PayPalSettings', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PayPalSettings_sn'), 'PayPalSettings', ['sn'], unique=False)
    op.create_table('Pledge',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('amount_currency', sa.String(length=4), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=False),
    sa.Column('attachments', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('payment_interval', sa.String(length=255), nullable=True),
    sa.Column('impact_area', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('soft_credit', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['impact_area'], ['ImpactArea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Pledge_organization_id'), 'Pledge', ['organization_id'], unique=False)
    op.create_index(op.f('ix_Pledge_sn'), 'Pledge', ['sn'], unique=False)
    op.create_table('PromoCodeAssociatedPackages',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('promo_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('package_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['package_id'], ['Packages.id'], ),
    sa.ForeignKeyConstraint(['promo_id'], ['PromoCode.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PromoCodeAssociatedPackages_organization_id'), 'PromoCodeAssociatedPackages', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PromoCodeAssociatedPackages_sn'), 'PromoCodeAssociatedPackages', ['sn'], unique=False)
    op.create_table('StripeInformation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_StripeInformation_organization_id'), 'StripeInformation', ['organization_id'], unique=False)
    op.create_index(op.f('ix_StripeInformation_sn'), 'StripeInformation', ['sn'], unique=False)
    op.create_table('StripeSettings',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('admin_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('secret_key', sa.LargeBinary(), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['Admin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_StripeSettings_organization_id'), 'StripeSettings', ['organization_id'], unique=False)
    op.create_index(op.f('ix_StripeSettings_sn'), 'StripeSettings', ['sn'], unique=False)
    op.create_table('VolunteerActivity',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_individual', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('impact_area', sa.String(length=255), nullable=True),
    sa.Column('attachments', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('fee_currency', sa.String(length=6), nullable=True),
    sa.Column('fee', sa.Integer(), nullable=True),
    sa.Column('t_shirt_size', sa.String(length=5), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_VolunteerActivity_organization_id'), 'VolunteerActivity', ['organization_id'], unique=False)
    op.create_index(op.f('ix_VolunteerActivity_sn'), 'VolunteerActivity', ['sn'], unique=False)
    op.create_table('AssociatedStripeCardInformation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('stripe_information_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('card_id', sa.String(length=255), nullable=True),
    sa.Column('card_brand', sa.String(length=30), nullable=True),
    sa.Column('last4', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['stripe_information_id'], ['StripeInformation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_AssociatedStripeCardInformation_organization_id'), 'AssociatedStripeCardInformation', ['organization_id'], unique=False)
    op.create_index(op.f('ix_AssociatedStripeCardInformation_sn'), 'AssociatedStripeCardInformation', ['sn'], unique=False)
    op.create_table('OneTimeTransaction',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('is_from_different_currency', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receipting_strategy', sa.String(length=255), nullable=True),
    sa.Column('charge_processor', sa.String(length=10), nullable=True),
    sa.Column('charge_receipt_url', sa.Text(), nullable=True),
    sa.Column('charge_transaction_rfx', sa.String(length=255), nullable=True),
    sa.Column('is_revenue', sa.Boolean(), nullable=False),
    sa.Column('date_received', sa.DateTime(), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('impact_area', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['impact_area'], ['ImpactArea.id'], ),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledge.id'], ),
    sa.ForeignKeyConstraint(['source'], ['DonationSource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_OneTimeTransaction_organization_id'), 'OneTimeTransaction', ['organization_id'], unique=False)
    op.create_index(op.f('ix_OneTimeTransaction_sn'), 'OneTimeTransaction', ['sn'], unique=False)
    op.create_table('P2PEmail',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('p2p_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('recipients', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.ForeignKeyConstraint(['p2p_id'], ['P2P.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_P2PEmail_organization_id'), 'P2PEmail', ['organization_id'], unique=False)
    op.create_index(op.f('ix_P2PEmail_sn'), 'P2PEmail', ['sn'], unique=False)
    op.create_table('PayPalRecurringTransaction',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('is_from_different_currency', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receipting_strategy', sa.String(length=255), nullable=True),
    sa.Column('charge_processor', sa.String(length=10), nullable=True),
    sa.Column('charge_receipt_url', sa.Text(), nullable=True),
    sa.Column('charge_transaction_rfx', sa.String(length=255), nullable=True),
    sa.Column('is_revenue', sa.Boolean(), nullable=False),
    sa.Column('prod_id', sa.String(length=50), nullable=True),
    sa.Column('prod_name', sa.String(length=255), nullable=True),
    sa.Column('prod_desc', sa.Text(), nullable=True),
    sa.Column('plan_id', sa.String(length=50), nullable=True),
    sa.Column('interval', sa.String(length=50), nullable=True),
    sa.Column('cycles', sa.String(length=50), nullable=True),
    sa.Column('currency', sa.String(length=50), nullable=True),
    sa.Column('subscription_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('country_code', sa.String(length=10), nullable=True),
    sa.Column('start_date', sa.String(length=100), nullable=True),
    sa.Column('subscription_token', sa.String(length=50), nullable=True),
    sa.Column('approve_link', sa.Text(), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('impact_area', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['impact_area'], ['ImpactArea.id'], ),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledge.id'], ),
    sa.ForeignKeyConstraint(['source'], ['DonationSource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PayPalRecurringTransaction_organization_id'), 'PayPalRecurringTransaction', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PayPalRecurringTransaction_sn'), 'PayPalRecurringTransaction', ['sn'], unique=False)
    op.create_table('PayPalTransaction',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('is_from_different_currency', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receipting_strategy', sa.String(length=255), nullable=True),
    sa.Column('charge_processor', sa.String(length=10), nullable=True),
    sa.Column('charge_receipt_url', sa.Text(), nullable=True),
    sa.Column('charge_transaction_rfx', sa.String(length=255), nullable=True),
    sa.Column('is_revenue', sa.Boolean(), nullable=False),
    sa.Column('payment_link', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('date_received', sa.DateTime(), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('impact_area', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['impact_area'], ['ImpactArea.id'], ),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledge.id'], ),
    sa.ForeignKeyConstraint(['source'], ['DonationSource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PayPalTransaction_organization_id'), 'PayPalTransaction', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PayPalTransaction_sn'), 'PayPalTransaction', ['sn'], unique=False)
    op.create_table('PledgeInstallment',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('expected_at', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('amount_currency', sa.String(length=4), nullable=False),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledge.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_PledgeInstallment_organization_id'), 'PledgeInstallment', ['organization_id'], unique=False)
    op.create_index(op.f('ix_PledgeInstallment_sn'), 'PledgeInstallment', ['sn'], unique=False)
    op.create_table('RecurringTransaction',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('row_deleted', sa.Boolean(), nullable=False),
    sa.Column('sn', sa.Integer(), sa.Identity(always=False, start=1, cycle=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('is_from_different_currency', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=False),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receipting_strategy', sa.String(length=255), nullable=True),
    sa.Column('charge_processor', sa.String(length=10), nullable=True),
    sa.Column('charge_receipt_url', sa.Text(), nullable=True),
    sa.Column('charge_transaction_rfx', sa.String(length=255), nullable=True),
    sa.Column('is_revenue', sa.Boolean(), nullable=False),
    sa.Column('billing_cycle', sa.String(length=20), nullable=True),
    sa.Column('billing_interval', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('stripe_product_name', sa.String(length=255), nullable=True),
    sa.Column('stripe_recurring_plan_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_subscription_url', sa.String(length=255), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_product_id', sa.String(length=255), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('impact_area', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaign.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['ContactCompanies.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['impact_area'], ['ImpactArea.id'], ),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledge.id'], ),
    sa.ForeignKeyConstraint(['source'], ['DonationSource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_RecurringTransaction_organization_id'), 'RecurringTransaction', ['organization_id'], unique=False)
    op.create_index(op.f('ix_RecurringTransaction_sn'), 'RecurringTransaction', ['sn'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_RecurringTransaction_sn'), table_name='RecurringTransaction')
    op.drop_index(op.f('ix_RecurringTransaction_organization_id'), table_name='RecurringTransaction')
    op.drop_table('RecurringTransaction')
    op.drop_index(op.f('ix_PledgeInstallment_sn'), table_name='PledgeInstallment')
    op.drop_index(op.f('ix_PledgeInstallment_organization_id'), table_name='PledgeInstallment')
    op.drop_table('PledgeInstallment')
    op.drop_index(op.f('ix_PayPalTransaction_sn'), table_name='PayPalTransaction')
    op.drop_index(op.f('ix_PayPalTransaction_organization_id'), table_name='PayPalTransaction')
    op.drop_table('PayPalTransaction')
    op.drop_index(op.f('ix_PayPalRecurringTransaction_sn'), table_name='PayPalRecurringTransaction')
    op.drop_index(op.f('ix_PayPalRecurringTransaction_organization_id'), table_name='PayPalRecurringTransaction')
    op.drop_table('PayPalRecurringTransaction')
    op.drop_index(op.f('ix_P2PEmail_sn'), table_name='P2PEmail')
    op.drop_index(op.f('ix_P2PEmail_organization_id'), table_name='P2PEmail')
    op.drop_table('P2PEmail')
    op.drop_index(op.f('ix_OneTimeTransaction_sn'), table_name='OneTimeTransaction')
    op.drop_index(op.f('ix_OneTimeTransaction_organization_id'), table_name='OneTimeTransaction')
    op.drop_table('OneTimeTransaction')
    op.drop_index(op.f('ix_AssociatedStripeCardInformation_sn'), table_name='AssociatedStripeCardInformation')
    op.drop_index(op.f('ix_AssociatedStripeCardInformation_organization_id'), table_name='AssociatedStripeCardInformation')
    op.drop_table('AssociatedStripeCardInformation')
    op.drop_index(op.f('ix_VolunteerActivity_sn'), table_name='VolunteerActivity')
    op.drop_index(op.f('ix_VolunteerActivity_organization_id'), table_name='VolunteerActivity')
    op.drop_table('VolunteerActivity')
    op.drop_index(op.f('ix_StripeSettings_sn'), table_name='StripeSettings')
    op.drop_index(op.f('ix_StripeSettings_organization_id'), table_name='StripeSettings')
    op.drop_table('StripeSettings')
    op.drop_index(op.f('ix_StripeInformation_sn'), table_name='StripeInformation')
    op.drop_index(op.f('ix_StripeInformation_organization_id'), table_name='StripeInformation')
    op.drop_table('StripeInformation')
    op.drop_index(op.f('ix_PromoCodeAssociatedPackages_sn'), table_name='PromoCodeAssociatedPackages')
    op.drop_index(op.f('ix_PromoCodeAssociatedPackages_organization_id'), table_name='PromoCodeAssociatedPackages')
    op.drop_table('PromoCodeAssociatedPackages')
    op.drop_index(op.f('ix_Pledge_sn'), table_name='Pledge')
    op.drop_index(op.f('ix_Pledge_organization_id'), table_name='Pledge')
    op.drop_table('Pledge')
    op.drop_index(op.f('ix_PayPalSettings_sn'), table_name='PayPalSettings')
    op.drop_index(op.f('ix_PayPalSettings_organization_id'), table_name='PayPalSettings')
    op.drop_table('PayPalSettings')
    op.drop_index(op.f('ix_P2P_sn'), table_name='P2P')
    op.drop_index(op.f('ix_P2P_organization_id'), table_name='P2P')
    op.drop_table('P2P')
    op.drop_index(op.f('ix_MailBlast_sn'), table_name='MailBlast')
    op.drop_index(op.f('ix_MailBlast_organization_id'), table_name='MailBlast')
    op.drop_table('MailBlast')
    op.drop_index(op.f('ix_Form_sn'), table_name='Form')
    op.drop_index(op.f('ix_Form_organization_id'), table_name='Form')
    op.drop_table('Form')
    op.drop_index(op.f('ix_EventsInformation_sn'), table_name='EventsInformation')
    op.drop_index(op.f('ix_EventsInformation_organization_id'), table_name='EventsInformation')
    op.drop_table('EventsInformation')
    op.drop_index(op.f('ix_EventbriteEvents_sn'), table_name='EventbriteEvents')
    op.drop_index(op.f('ix_EventbriteEvents_organization_id'), table_name='EventbriteEvents')
    op.drop_table('EventbriteEvents')
    op.drop_index(op.f('ix_EventBriteKey_sn'), table_name='EventBriteKey')
    op.drop_index(op.f('ix_EventBriteKey_organization_id'), table_name='EventBriteKey')
    op.drop_table('EventBriteKey')
    op.drop_index(op.f('ix_Element_sn'), table_name='Element')
    op.drop_index(op.f('ix_Element_organization_id'), table_name='Element')
    op.drop_table('Element')
    op.drop_index(op.f('ix_ContactInteraction_sn'), table_name='ContactInteraction')
    op.drop_index(op.f('ix_ContactInteraction_organization_id'), table_name='ContactInteraction')
    op.drop_table('ContactInteraction')
    op.drop_index(op.f('ix_AssociatedContact_sn'), table_name='AssociatedContact')
    op.drop_index(op.f('ix_AssociatedContact_organization_id'), table_name='AssociatedContact')
    op.drop_table('AssociatedContact')
    op.drop_index(op.f('ix_PromoCode_sn'), table_name='PromoCode')
    op.drop_index(op.f('ix_PromoCode_organization_id'), table_name='PromoCode')
    op.drop_table('PromoCode')
    op.drop_index(op.f('ix_Packages_sn'), table_name='Packages')
    op.drop_index(op.f('ix_Packages_organization_id'), table_name='Packages')
    op.drop_table('Packages')
    op.drop_index(op.f('ix_Keyword_sn'), table_name='Keyword')
    op.drop_index(op.f('ix_Keyword_organization_id'), table_name='Keyword')
    op.drop_table('Keyword')
    op.drop_index(op.f('ix_ImpactArea_sn'), table_name='ImpactArea')
    op.drop_index(op.f('ix_ImpactArea_organization_id'), table_name='ImpactArea')
    op.drop_table('ImpactArea')
    op.drop_index(op.f('ix_Households_sn'), table_name='Households')
    op.drop_index(op.f('ix_Households_organization_id'), table_name='Households')
    op.drop_table('Households')
    op.drop_index(op.f('ix_Fields_sn'), table_name='Fields')
    op.drop_index(op.f('ix_Fields_organization_id'), table_name='Fields')
    op.drop_table('Fields')
    op.drop_index(op.f('ix_DonationSource_sn'), table_name='DonationSource')
    op.drop_index(op.f('ix_DonationSource_organization_id'), table_name='DonationSource')
    op.drop_table('DonationSource')
    op.drop_index(op.f('ix_ContactUsers_sn'), table_name='ContactUsers')
    op.drop_index(op.f('ix_ContactUsers_organization_id'), table_name='ContactUsers')
    op.drop_table('ContactUsers')
    op.drop_index(op.f('ix_ContactTodo_sn'), table_name='ContactTodo')
    op.drop_index(op.f('ix_ContactTodo_organization_id'), table_name='ContactTodo')
    op.drop_table('ContactTodo')
    op.drop_index(op.f('ix_ContactTags_sn'), table_name='ContactTags')
    op.drop_index(op.f('ix_ContactTags_organization_id'), table_name='ContactTags')
    op.drop_table('ContactTags')
    op.drop_index(op.f('ix_ContactCompanies_sn'), table_name='ContactCompanies')
    op.drop_index(op.f('ix_ContactCompanies_organization_id'), table_name='ContactCompanies')
    op.drop_table('ContactCompanies')
    op.drop_index(op.f('ix_Campaign_sn'), table_name='Campaign')
    op.drop_index(op.f('ix_Campaign_organization_id'), table_name='Campaign')
    op.drop_table('Campaign')
    op.drop_index(op.f('ix_Admin_sn'), table_name='Admin')
    op.drop_index(op.f('ix_Admin_organization_id'), table_name='Admin')
    op.drop_table('Admin')
    op.drop_index(op.f('ix_AccessTokenBlocklist_sn'), table_name='AccessTokenBlocklist')
    op.drop_table('AccessTokenBlocklist')
    # ### end Alembic commands ###
