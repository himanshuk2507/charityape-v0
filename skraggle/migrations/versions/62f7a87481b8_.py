"""empty message

Revision ID: 62f7a87481b8
Revises: 
Create Date: 2023-01-05 22:48:10.766258

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '62f7a87481b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AccessTokenBlocklist',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('revoked_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Admin',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('admin_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=500), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.Column('extra_protection', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('type_of', postgresql.ENUM('user', 'invitation', name='type_of'), nullable=True),
    sa.Column('permission_level', postgresql.ENUM('administrator', 'coordinator', 'manager', name='permission_level'), nullable=True),
    sa.Column('salesforce_connected', sa.Boolean(), nullable=True),
    sa.Column('salesforce_id', sa.String(length=255), nullable=True),
    sa.Column('facebook_connected', sa.Boolean(), nullable=True),
    sa.Column('facebook_id', sa.String(length=255), nullable=True),
    sa.Column('token_reset', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('admin_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Badges',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('badge_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('badge_name', sa.String(length=255), nullable=True),
    sa.Column('badge_color', sa.String(length=255), nullable=True),
    sa.Column('badge_icon', sa.String(length=255), nullable=True),
    sa.Column('badge_type', postgresql.ENUM('custom', 'system', name='badge_type'), nullable=True),
    sa.Column('uploaded_batch', sa.String(length=255), nullable=True),
    sa.Column('badge_restriction', postgresql.ENUM('any_participant', 'team_members', 'team_captain', 'team', name='badge_restriction'), nullable=True),
    sa.Column('badge_status', postgresql.ENUM('disable', 'enable', name='badge_status'), nullable=True),
    sa.Column('manually_award', sa.Boolean(), nullable=True),
    sa.Column('achievement_reached_type', postgresql.ENUM('individual_donations', 'percentage_of_donations', 'total_donations', name='achievement_status'), nullable=False),
    sa.Column('achievement_reached', sa.Integer(), nullable=True),
    sa.Column('badge_award', postgresql.ENUM('manually', 'achievement', 'engagement', name='badge_award'), nullable=False),
    sa.PrimaryKeyConstraint('badge_id')
    )
    op.create_table('Campaigns',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('fundraising_goal', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('processing', 'completed', name='campaign_status'), nullable=True),
    sa.Column('assignee', sa.String(length=255), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('followers', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CompanyUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('primary_phone', sa.VARCHAR(), nullable=True),
    sa.Column('tag', sa.String(length=50), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('ContactUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=False),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('fullname', sa.String(length=255), nullable=True),
    sa.Column('primary_phone', sa.String(length=255), nullable=True),
    sa.Column('primary_email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('best_way_to_reach_out', sa.String(length=155), nullable=True),
    sa.Column('birth_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('state', sa.String(length=155), nullable=True),
    sa.Column('city', sa.String(length=155), nullable=True),
    sa.Column('postal_zip', sa.String(length=155), nullable=True),
    sa.Column('company', sa.String(length=155), nullable=True),
    sa.Column('type', sa.String(length=155), nullable=True),
    sa.Column('unit', sa.String(length=155), nullable=True),
    sa.Column('assignee', sa.String(length=155), nullable=True),
    sa.Column('contact_type', sa.String(length=155), nullable=True),
    sa.Column('country', sa.String(length=155), nullable=True),
    sa.Column('has_membership', sa.Boolean(), nullable=True),
    sa.Column('donations_last_year', sa.Numeric(precision=1000, scale=2), nullable=True),
    sa.Column('donations_this_year', sa.Numeric(precision=1000, scale=2), nullable=True),
    sa.Column('donor_score', sa.Integer(), nullable=True),
    sa.Column('email_subscription_status', sa.String(length=255), nullable=True),
    sa.Column('engagement_stage', sa.String(length=50), nullable=True),
    sa.Column('established_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('household', sa.String(length=255), nullable=True),
    sa.Column('household_Role', sa.String(length=255), nullable=True),
    sa.Column('major_gift_amount', sa.Integer(), nullable=True),
    sa.Column('major_gift_donor', sa.Integer(), nullable=True),
    sa.Column('preferred_name', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.String(length=255), nullable=True),
    sa.Column('smart_Ask', sa.String(length=255), nullable=True),
    sa.Column('solicitation', sa.String(length=255), nullable=True),
    sa.Column('time_of_year', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('number_of_donations', sa.Integer(), nullable=True),
    sa.Column('total_donations', sa.Numeric(precision=1000, scale=2), nullable=True),
    sa.Column('total_transactions', sa.Integer(), nullable=True),
    sa.Column('total_volunteering', sa.Numeric(precision=1000, scale=2), nullable=True),
    sa.Column('volunteering_this_year', sa.String(length=255), nullable=True),
    sa.Column('facebook', sa.String(length=255), nullable=True),
    sa.Column('instagram', sa.String(length=255), nullable=True),
    sa.Column('linkedln', sa.String(length=255), nullable=True),
    sa.Column('twitter', sa.String(length=255), nullable=True),
    sa.Column('youtube', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=225), nullable=True),
    sa.Column('othersite', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('DonorPortal',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('portal_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('portal_url', sa.String(length=255), nullable=True),
    sa.Column('browse_icon', sa.String(length=255), nullable=True),
    sa.Column('header_image', sa.String(length=255), nullable=True),
    sa.Column('hero_image', sa.String(length=255), nullable=True),
    sa.Column('portal_title', sa.String(length=255), nullable=True),
    sa.Column('recurring_donation_cancellation', sa.Boolean(), nullable=True),
    sa.Column('reduce_donation_amount', sa.Boolean(), nullable=True),
    sa.Column('skip_recurring_donation', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('portal_id')
    )
    op.create_table('Donors',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('donor_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=255), nullable=True),
    sa.Column('classification', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('dedication', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('donate_to', postgresql.ENUM('event', 'team', 'participant', name='donate_to'), nullable=False),
    sa.Column('email_permission', sa.Boolean(), nullable=True),
    sa.Column('show_donation_amount', sa.Boolean(), nullable=True),
    sa.Column('show_donation_name', sa.Boolean(), nullable=True),
    sa.Column('donated_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('donor_id')
    )
    op.create_table('Eblasts',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('eblast_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('eblast_name', sa.String(length=255), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('assignee', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', postgresql.ENUM('draft', 'sent', 'archive', name='eblast_status'), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('sent_date', sa.DateTime(), nullable=True),
    sa.Column('stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('amount_raised', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('eblast_id'),
    sa.UniqueConstraint('assignee'),
    sa.UniqueConstraint('campaign_id'),
    sa.UniqueConstraint('category_id')
    )
    op.create_table('EventRegisterationReciept',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('from_name', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('body', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EventSetting',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('max_number_of_total_participants', sa.String(length=255), nullable=True),
    sa.Column('event_start_date_setup', sa.DateTime(), nullable=False),
    sa.Column('event_end_date_setup', sa.DateTime(), nullable=False),
    sa.Column('event_reg_cut_off_date', sa.DateTime(), nullable=False),
    sa.Column('one_time_donation', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EventsInformation',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('venue', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('zip_country', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('FacebookDetails',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('facebook_email', sa.String(length=255), nullable=True),
    sa.Column('facebook_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('belongs_to', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('facebook_user_id', sa.String(length=255), nullable=True),
    sa.Column('page_tokens', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('access_token', sa.String(length=255), nullable=True),
    sa.Column('scopes', sa.String(length=255), nullable=True),
    sa.Column('connected_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('facebook_id')
    )
    op.create_table('GoogleUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('google_id', sa.String(length=30), nullable=False),
    sa.Column('fullname', sa.String(length=255), nullable=True),
    sa.Column('fname', sa.String(length=255), nullable=True),
    sa.Column('lname', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('location', sa.String(length=225), nullable=True),
    sa.Column('joined_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('google_id')
    )
    op.create_table('HouseholdUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('household_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('contacts', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.PrimaryKeyConstraint('household_id')
    )
    op.create_table('InappropriateContent',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('url_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('url_status', postgresql.ENUM('blocked', 'cleared', 'flagged', name='url_status'), nullable=False),
    sa.PrimaryKeyConstraint('url_id')
    )
    op.create_table('Interactions',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('interaction_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('interaction_type', postgresql.ENUM('email', 'phone', 'mail', 'inperson', 'onlinechat', 'videoconference', 'socialmedia', 'other', 'event', name='interaction_type'), nullable=True),
    sa.Column('date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.String(length=255), nullable=True),
    sa.Column('attachments', sa.String(length=255), nullable=True),
    sa.Column('has_todo', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    op.create_table('Invitations',
    sa.Column('organization_id', sa.String(length=100), nullable=False),
    sa.Column('invitation_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('invitation_key', sa.String(length=55), nullable=False),
    sa.Column('permission_level', postgresql.ENUM('administrator', 'coordinator', 'manager', name='permission_level'), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=True),
    sa.Column('invited_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('invited_user_email', sa.String(length=255), nullable=True),
    sa.Column('invited_on', sa.DateTime(), nullable=True),
    sa.Column('invitation_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('invitation_id'),
    sa.UniqueConstraint('invitation_key')
    )
    op.create_table('NeonCrmDetails',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('neoncrm_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('api_key', sa.Text(), nullable=True),
    sa.Column('org_id', sa.Text(), nullable=True),
    sa.Column('session_id', sa.Text(), nullable=True),
    sa.Column('belongs_to', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('connected_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('neoncrm_id')
    )
    op.create_table('OrganizationSettings',
    sa.Column('organization_id', sa.String(length=100), nullable=False),
    sa.Column('organization_name', sa.String(length=255), nullable=True),
    sa.Column('organization_email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('organization_phone', sa.String(length=20), nullable=True),
    sa.Column('organization_website', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=255), nullable=True),
    sa.Column('organization_logo', sa.String(length=255), nullable=True),
    sa.Column('statement_description', sa.Text(), nullable=True),
    sa.Column('is_legal', sa.Boolean(), nullable=True),
    sa.Column('tax_exemption_verification', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('organization_id')
    )
    op.create_table('P2PEventInformation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('internal_event_name', sa.String(length=250), nullable=True),
    sa.Column('event_name', sa.String(length=250), nullable=True),
    sa.Column('event_status', postgresql.ENUM('Active', 'Disabled', 'Closed', name='eventInformation'), nullable=False),
    sa.Column('fundraising_goal', sa.Integer(), nullable=True),
    sa.Column('event_start_date', sa.DateTime(), nullable=False),
    sa.Column('event_end_date', sa.DateTime(), nullable=False),
    sa.Column('event_registration_cutoff_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2PFundraiser',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('p2p_id', sa.String(length=255), nullable=True),
    sa.Column('campaign', sa.String(length=255), nullable=True),
    sa.Column('designation', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('goal', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=255), nullable=True),
    sa.Column('offline_amount', sa.String(length=255), nullable=True),
    sa.Column('offline_donation', sa.String(length=255), nullable=True),
    sa.Column('goal_date', sa.Date(), nullable=True),
    sa.Column('personal_message', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('supporter', sa.String(length=255), nullable=True),
    sa.Column('profile_photo', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pCategories',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pDedication',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('dedication_text', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pDonationAmount',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pEventContactInformation',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_first_name', sa.String(length=255), nullable=True),
    sa.Column('contact_last_name', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('contact_address', sa.String(length=255), nullable=True),
    sa.Column('contact_phone_number', sa.Integer(), nullable=True),
    sa.Column('from_email_address', sa.String(length=250), nullable=True),
    sa.Column('from_name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pRestrictions',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('P2pTeams',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('team_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('participants', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('team_name', sa.String(length=255), nullable=True),
    sa.Column('badges', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('captain', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('verified_amount', sa.Integer(), nullable=True),
    sa.Column('unverified_amount', sa.Integer(), nullable=True),
    sa.Column('amount_raised', sa.Integer(), nullable=True),
    sa.Column('team_avatar', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('team_id'),
    sa.UniqueConstraint('participants')
    )
    op.create_table('Packages',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('private_package', sa.Boolean(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('direct_cost', sa.Integer(), nullable=True),
    sa.Column('number_of_packages_for_sale', sa.Integer(), nullable=True),
    sa.Column('qty_purchase_limit', sa.Integer(), nullable=True),
    sa.Column('early_bird_discount_enabled', sa.Boolean(), nullable=True),
    sa.Column('early_bird_discount_amount', sa.Integer(), nullable=True),
    sa.Column('early_bird_discount_cutoff_time', sa.DateTime(), nullable=True),
    sa.Column('early_bird_discount_type', postgresql.ENUM('percentage', 'amount', name='early_bird_discount_type'), nullable=True),
    sa.Column('participants', postgresql.ARRAY(postgresql.UUID()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Resource',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('file', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('category', postgresql.ENUM('image', 'document', 'other', name='resource'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SalesforceDetails',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('salesforce_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('belongs_to', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('instance_url', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('access_token', sa.String(length=255), nullable=True),
    sa.Column('scopes', sa.String(length=255), nullable=True),
    sa.Column('connected_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('salesforce_id')
    )
    op.create_table('SegmentUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('segment_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contacts', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('segment_id')
    )
    op.create_table('SponsorCategories',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('category_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('StoreCategories',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('TagUsers',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('contacts', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('tag_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_name', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('TwitterConnection',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('twitter_connect_Id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('twitter_key', sa.String(length=255), nullable=True),
    sa.Column('twitter_secret', sa.String(length=255), nullable=True),
    sa.Column('connnected_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('twitter_connect_Id', 'user_id')
    )
    op.create_table('UrlShortener',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('shorten_url_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('original_url', sa.String(length=255), nullable=True),
    sa.Column('custom_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('shorten_url_id')
    )
    op.create_table('WelcomeGuests',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('walkthrough', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('welcome_quest', sa.Boolean(), nullable=True),
    sa.Column('upload_your_avatar', sa.Boolean(), nullable=True),
    sa.Column('update_your_personal_page', sa.Boolean(), nullable=True),
    sa.Column('send_a_fundraising_email', sa.Boolean(), nullable=True),
    sa.Column('raise_your_first_donation', sa.Boolean(), nullable=True),
    sa.Column('recruit_a_team_member', sa.Boolean(), nullable=True),
    sa.Column('share_on', sa.Boolean(), nullable=True),
    sa.Column('steps', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('walkthrough')
    )
    op.create_table('demo_users',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('fname', sa.String(length=255), nullable=False),
    sa.Column('lname', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('orgName', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('p2pClassification',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('time_zone', postgresql.ENUM('Eastern Time', 'Central Time', 'Mountain Time', 'Pacific Time', 'Alaska Time', 'Hawaii Time', name='timezone'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AdminDonations',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EblastsContent',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('eblasts_content_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('eblast', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('eblast_users', postgresql.ENUM('segment', 'tags', 'contacts', name='eblasts_send_type'), nullable=True),
    sa.Column('segment_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('send_to', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('mail_from', sa.String(length=255), nullable=True),
    sa.Column('sender_name', sa.String(length=255), nullable=True),
    sa.Column('reply_to', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('send_to_unknown', sa.Boolean(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('attachments', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('exclude', sa.Boolean(), nullable=True),
    sa.Column('_exclude_emails', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.ForeignKeyConstraint(['eblast'], ['Eblasts.eblast_id'], ),
    sa.PrimaryKeyConstraint('eblasts_content_id'),
    sa.UniqueConstraint('segment_id'),
    sa.UniqueConstraint('tag_id')
    )
    op.create_table('Elements',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('internal', sa.Integer(), nullable=True),
    sa.Column('external', sa.Integer(), nullable=True),
    sa.Column('source_code', sa.Text(), nullable=True),
    sa.Column('type', postgresql.ENUM('internal', 'external', name='elements'), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('archive', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Fields',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('field_label', sa.String(length=255), nullable=True),
    sa.Column('reporting_label', sa.String(length=255), nullable=True),
    sa.Column('field_type', postgresql.ENUM('Text Box', 'Text Area', 'Dropdown', 'Checkbox', name='fields'), nullable=False),
    sa.Column('associate_field_with_specific_package', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['associate_field_with_specific_package'], ['Packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Forms',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('form_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('form_name', sa.String(length=255), nullable=True),
    sa.Column('campaign', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('form_type', sa.String(length=200), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.String(length=255), nullable=True),
    sa.Column('is_minimum_amount', sa.Boolean(), nullable=True),
    sa.Column('is_default_currency', sa.Boolean(), nullable=True),
    sa.Column('is_default_donation', sa.Boolean(), nullable=True),
    sa.Column('is_tribute', sa.Boolean(), nullable=True),
    sa.Column('is_processing_fee', sa.Boolean(), nullable=True),
    sa.Column('followers', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('published', 'closed', name='form_status'), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign'], ['Campaigns.id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('MarketingKeys',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('admin_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('google_analytics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('facebook_pixel', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('facebook_conversion', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['Admin.admin_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Memberships',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('membership_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('membership_status', postgresql.ENUM('active', 'expired', 'cancelled', name='membership_status'), nullable=True),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=True),
    sa.Column('auto_send_email', sa.Boolean(), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('receipt_name', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('email_address', sa.String(length=100), nullable=True),
    sa.Column('membership_fee', sa.Integer(), nullable=True),
    sa.Column('cancelled_date', sa.DateTime(), nullable=True),
    sa.Column('payment_method', postgresql.ENUM('stripe', 'paypal', 'offline', name='membership_payment'), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('membership_id')
    )
    op.create_table('P2pPromoCode',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('promo_code', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('discount', sa.Integer(), nullable=True),
    sa.Column('max_user', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('category', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['P2pCategories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Participants',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('participant_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('donation_amount', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('badges_list', postgresql.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('classification', sa.String(length=255), nullable=True),
    sa.Column('is_team_captain', sa.Boolean(), nullable=True),
    sa.Column('in_team', sa.Boolean(), nullable=True),
    sa.Column('team', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['team'], ['P2pTeams.participants'], ),
    sa.PrimaryKeyConstraint('participant_id')
    )
    op.create_table('PersonalInfo',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('todo', sa.String(length=255), nullable=True),
    sa.Column('due_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Pledges',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('pledge_name', sa.String(length=255), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('pledge_type', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', postgresql.ENUM('processing', 'completed', 'pending', name='pledge_Status'), nullable=False),
    sa.Column('is_installment', sa.Boolean(), nullable=False),
    sa.Column('attachments', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('contact', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('contact_name', sa.String(length=255), nullable=True),
    sa.Column('payment_interval', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['contact'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PromoCode',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('promo_code', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('discount', sa.Integer(), nullable=True),
    sa.Column('max_user', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('promo_code_applied_to_package', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['promo_code_applied_to_package'], ['Packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SalesforceMappings',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('mapping_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('salesforce_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('mappings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['salesforce_id'], ['SalesforceDetails.salesforce_id'], ),
    sa.PrimaryKeyConstraint('mapping_id')
    )
    op.create_table('StoreProduct',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['StoreCategories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Transactions',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('transaction_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('donor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('dateReceived', sa.DateTime(), nullable=True),
    sa.Column('transactionType', sa.String(length=255), nullable=True),
    sa.Column('totalAmount', sa.Float(), nullable=True),
    sa.Column('status', postgresql.ENUM('accepted', 'declined', 'pending', name='transaction_status'), nullable=True),
    sa.Column('transaction_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('attachments', sa.String(length=255), nullable=True),
    sa.Column('billing_address', sa.String(length=255), nullable=True),
    sa.Column('transaction_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('transaction_from', postgresql.ENUM('from_donor', 'from_contact', 'from_pledge', 'from_event', name='transaction_from_field'), nullable=True),
    sa.Column('transaction_for', postgresql.ENUM('donation', 'revenue', 'other', name='transaction_for'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaigns.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['donor_id'], ['Donors.donor_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('VolunteerActivity',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('activity_name', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('desc', sa.String(length=255), nullable=True),
    sa.Column('impact_area', sa.String(length=255), nullable=True),
    sa.Column('compaign', sa.String(length=255), nullable=True),
    sa.Column('attachment_name', sa.String(length=255), nullable=True),
    sa.Column('attachments', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_todo',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('interaction_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('todo', sa.String(length=255), nullable=True),
    sa.Column('details', sa.String(length=255), nullable=True),
    sa.Column('assignee', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('due_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('attachment_name', sa.String(length=255), nullable=True),
    sa.Column('attachments', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.ForeignKeyConstraint(['interaction_id'], ['Interactions.interaction_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule_recurring_donation',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('billing_cycle', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'draft', name='recurring_donation_status'), nullable=False),
    sa.Column('receipt_setting', sa.String(length=255), nullable=True),
    sa.Column('impact_area', sa.String(length=255), nullable=True),
    sa.Column('campaign_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('keywords', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('dedication', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('gift_type', sa.String(length=255), nullable=False),
    sa.Column('plan_id', sa.String(length=255), nullable=True),
    sa.Column('product_id', sa.String(length=255), nullable=True),
    sa.Column('customer_id', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['Campaigns.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule_recurring_revenue',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('transaction_type', sa.String(length=50), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('billing_cycle', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('processing', 'completed', 'pending', name='recurring_status'), nullable=False),
    sa.ForeignKeyConstraint(['contact'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_donation',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('transaction_type', sa.String(length=255), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions_revenue',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contact_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('transaction_type', sa.String(length=255), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['ContactUsers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Associations',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('pledges', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('campaign', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('impact_area', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('dedication', sa.String(length=255), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['campaign'], ['Campaigns.id'], ),
    sa.ForeignKeyConstraint(['pledges'], ['Pledges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PledgeInstallments',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status', postgresql.ENUM('processing', 'completed', 'pending', name='pledge_Status'), nullable=False),
    sa.Column('expected_date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('pledge_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['pledge_id'], ['Pledges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('TransactionReceipts',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('receiptID', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('transaction_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('receipt_name', sa.String(length=255), nullable=True),
    sa.Column('full_address', sa.String(length=255), nullable=True),
    sa.Column('delivery_option', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['Transactions.transaction_id'], ),
    sa.PrimaryKeyConstraint('receiptID')
    )
    op.create_table('responses',
    sa.Column('organization_id', sa.String(length=100), nullable=True),
    sa.Column('response_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('form_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('fullname', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('payment_method', sa.String(length=255), nullable=True),
    sa.Column('default_currency', sa.String(length=155), nullable=True),
    sa.Column('payment_type', sa.String(length=255), nullable=True),
    sa.Column('minimum_amount', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['form_id'], ['Forms.form_id'], ),
    sa.PrimaryKeyConstraint('response_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('responses')
    op.drop_table('TransactionReceipts')
    op.drop_table('PledgeInstallments')
    op.drop_table('Associations')
    op.drop_table('transactions_revenue')
    op.drop_table('transaction_donation')
    op.drop_table('schedule_recurring_revenue')
    op.drop_table('schedule_recurring_donation')
    op.drop_table('contact_todo')
    op.drop_table('VolunteerActivity')
    op.drop_table('Transactions')
    op.drop_table('StoreProduct')
    op.drop_table('SalesforceMappings')
    op.drop_table('PromoCode')
    op.drop_table('Pledges')
    op.drop_table('PersonalInfo')
    op.drop_table('Participants')
    op.drop_table('P2pPromoCode')
    op.drop_table('Memberships')
    op.drop_table('MarketingKeys')
    op.drop_table('Forms')
    op.drop_table('Fields')
    op.drop_table('Elements')
    op.drop_table('EblastsContent')
    op.drop_table('AdminDonations')
    op.drop_table('p2pClassification')
    op.drop_table('demo_users')
    op.drop_table('WelcomeGuests')
    op.drop_table('UrlShortener')
    op.drop_table('TwitterConnection')
    op.drop_table('TagUsers')
    op.drop_table('StoreCategories')
    op.drop_table('SponsorCategories')
    op.drop_table('SegmentUsers')
    op.drop_table('SalesforceDetails')
    op.drop_table('Resource')
    op.drop_table('Packages')
    op.drop_table('P2pTeams')
    op.drop_table('P2pRestrictions')
    op.drop_table('P2pEventContactInformation')
    op.drop_table('P2pDonationAmount')
    op.drop_table('P2pDedication')
    op.drop_table('P2pCategories')
    op.drop_table('P2PFundraiser')
    op.drop_table('P2PEventInformation')
    op.drop_table('OrganizationSettings')
    op.drop_table('NeonCrmDetails')
    op.drop_table('Invitations')
    op.drop_table('Interactions')
    op.drop_table('InappropriateContent')
    op.drop_table('HouseholdUsers')
    op.drop_table('GoogleUsers')
    op.drop_table('FacebookDetails')
    op.drop_table('EventsInformation')
    op.drop_table('EventSetting')
    op.drop_table('EventRegisterationReciept')
    op.drop_table('Eblasts')
    op.drop_table('Donors')
    op.drop_table('DonorPortal')
    op.drop_table('ContactUsers')
    op.drop_table('CompanyUsers')
    op.drop_table('Campaigns')
    op.drop_table('Badges')
    op.drop_table('Admin')
    op.drop_table('AccessTokenBlocklist')
    # ### end Alembic commands ###
